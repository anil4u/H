version: '1.0'
steps:
  BuildingDockerImage:
    title: Building Docker Image
    type: build
    image_name: my_repo/my_image
    working_directory: ./
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
    dockerfile: Dockerfile

# In this example, we're using CodeFresh environment variables
# to store the username & password of our Twistlock CI user account
# and the URL to our console

# TL_USER:  The Twistlock user with the CI User role
# TL_PASS:  The password for this user account
# TL_CONSOLE_URL:  The base URL for the console -- http://console.<my_company>.com:8083 -- without a trailing /

# The TwistlockScan step will download the twistcli tool inside of the freshly built image,
# make it executable, and execute a scan within the image.
# Refer to the online product documentation, 
# Tools / Scan images with twistcli / Section 4.2
# for more details on this approach

  TwistlockScan:
    title: Scan image with twistcli
    description: Step description
    image: ${{BuildingDockerImage}}
    commands: 
      - curl -k -u $TL_USER:$TL_PASS --output ./twistcli $TL_CONSOLE_URL/api/v1/util/twistcli
      - chmod +x ./twistcli
      - ./twistcli images scan --details -address $TL_CONSOLE_URL -u $TL_USER -p $TL_PASS --containerized my_repo/my_image:${{CF_BRANCH_TAG_NORMALIZED}}
    
    # --include-3rd-party is new in Twistlock 18.11.  Omit it if you're using an earlier version.
    
    # Add --vulnerability-threshold and/or --compliance-threshold to this command to
    # fail builds based on the thresholds.
    # See twistcli documentation for more details.
      
# add any additional commands needed to test the image, push to a registry, etc.
